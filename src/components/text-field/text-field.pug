mixin text-field(params = {})

  -
    const {
      type="",
      dataType="",
      placeholder="",
      name="text-field",
      autocomplete="off",
      focused=false,
      isLowercase=false,
      withSpellcheck=false,
      isSubscription=false,
      hasArrow=false,
      isReadonly=false,
      withMask=false
    } = params

    const mainClass = "text-field__input"
    const focusedClass = focused ? "text-field_focused" : ""
    const textLowercaseClass = isLowercase ? "text-field__input_lowercase-text" : ""
    const inputWithoutArrowClass = isSubscription ? "text-field__input_without-arrow" : ""
    const inputWithMaskClass = withMask ? 'js-text-field__input_with-mask' : ""
    const inputPointerTypeClass = isReadonly ? "text-field__input_cursor-pointer" : ""

    const inputAttributes = {
      class: [
        mainClass,
        inputWithMaskClass,
        textLowercaseClass,
        inputWithoutArrowClass,
        inputPointerTypeClass
      ],
      type: type,
      "data-type": dataType,
      name: name,
      autocomplete: autocomplete,
      placeholder: placeholder,
      spellcheck: withSpellcheck,
      readonly: isReadonly,
    }

  .text-field(class=[focusedClass])
    input&attributes(inputAttributes)
    if hasArrow
      div(
        class="text-field__arrow text-field__arrow_down"
      )&attributes({ "data-type": "arrow" })
    if isSubscription
      button&attributes({
        class: [
          "text-field__arrow-subscribe",
          "text-field__arrow-subscribe_with-gradient-fill"
        ],
        type: "submit",
        name: "subscribe"
      })